@using Microsoft.AspNetCore.Identity
@inject SignInManager<UsuariosModel> SignInManager
@inject UserManager<UsuariosModel> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <!-- Verificamos si el usuario tiene el rol "Administrador de Recursos Humanos" -->
        @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Administrador de Recursos Humanos"))
        {
            <!-- Si el usuario tiene el rol, mostramos el enlace para su gestión y el logout -->
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
        }

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>

    }
    else
    {
        <!-- Si el usuario no está logueado, mostramos los enlaces para Login y Register -->
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
